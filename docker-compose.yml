services:
  app:
    container_name: spade
    build:
      context: .
      dockerfile: Dockerfile
    image: spade
    ports:
      - 8080:8080
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - network

  db:
    container_name: db
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./database/migrations:/database/migrations
    depends_on:
      db:
        condition: service_healthy 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command: ["-source", "file://database/migrations", "-database", "mysql://root:${MYSQL_ROOT_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${MYSQL_DATABASE}?multiStatements=true", "-verbose", "up"]
    networks:
      - network

  setup:
    image: mysql
    depends_on:
      db:
        condition: service_healthy
    entrypoint: >
      sh -c "
      mysql -h mysql -u root -p${MYSQL_ROOT_PASSWORD} ${MYSQL_DATABASE} -e \"
      GRANT ALL PRIVILEGES ON ${MYSQL_DATABASE}.* TO '${MYSQL_USER}'@'%';
      FLUSH PRIVILEGES;\"
      "
    networks:
      - network

volumes:
  dbdata:

networks:
  network:
    driver: bridge
